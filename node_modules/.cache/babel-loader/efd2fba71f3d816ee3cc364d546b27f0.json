{"ast":null,"code":"import _classCallCheck from \"/Users/gnani/Documents/photoshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gnani/Documents/photoshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gnani/Documents/photoshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gnani/Documents/photoshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gnani/Documents/photoshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gnani/Documents/photoshare/src/components/Comments.js\";\nimport React, { Component } from 'react';\nimport NewComment from './NewComment';\nimport Header from './Header';\n\nvar Comments = /*#__PURE__*/function (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getPost = function (postid, posts) {\n      var post;\n      posts.some(function (p) {\n        if (p.id === postid) {\n          post = p;\n          return true;\n        }\n\n        return false;\n      });\n      return post;\n    };\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          posts = _this$props.posts,\n          currentUser = _this$props.currentUser,\n          getUser = _this$props.getUser,\n          allComments = _this$props.allComments,\n          updateComments = _this$props.updateComments,\n          getComments = _this$props.getComments;\n      var postid = this.props.match.params.postid;\n      var post = this.getPost(postid, posts);\n      var commentArray = getComments(postid);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        currentUser: currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comments\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, commentArray.length > 0 ? commentArray.map(function (comment, i) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          key: i,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: getUser(comment.authorid).avatar,\n          alt: \"avatar\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 36\n          }\n        }), comment.text);\n      }) : null, /*#__PURE__*/React.createElement(NewComment, {\n        currentUser: currentUser,\n        allComments: allComments,\n        postid: post.id,\n        updateComments: updateComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nexport default Comments;","map":{"version":3,"sources":["/Users/gnani/Documents/photoshare/src/components/Comments.js"],"names":["React","Component","NewComment","Header","Comments","getPost","postid","posts","post","some","p","id","props","currentUser","getUser","allComments","updateComments","getComments","match","params","commentArray","length","map","comment","i","authorid","avatar","text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAGMC,Q;;;;;;;;;;;;;;;;UAEFC,O,GAAU,UAACC,MAAD,EAASC,KAAT,EAAmB;AACzB,UAAIC,IAAJ;AACAD,MAAAA,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAO;AACd,YAAGA,CAAC,CAACC,EAAF,KAASL,MAAZ,EAAmB;AACfE,UAAAA,IAAI,GAAGE,CAAP;AACA,iBAAO,IAAP;AACH;;AACD,eAAO,KAAP;AACH,OAND;AAOA,aAAOF,IAAP;AACH,K;;;;;;;6BAGO;AAAA;;AAAA,wBAC4E,KAAKI,KADjF;AAAA,UACGL,KADH,eACGA,KADH;AAAA,UACUM,WADV,eACUA,WADV;AAAA,UACuBC,OADvB,eACuBA,OADvB;AAAA,UACgCC,WADhC,eACgCA,WADhC;AAAA,UAC6CC,cAD7C,eAC6CA,cAD7C;AAAA,UAC6DC,WAD7D,eAC6DA,WAD7D;AAEJ,UAAIX,MAAM,GAAG,KAAKM,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBb,MAArC;AAEA,UAAIE,IAAI,GAAG,KAAKH,OAAL,CAAaC,MAAb,EAAqBC,KAArB,CAAX;AACA,UAAIa,YAAY,GAAGH,WAAW,CAACX,MAAD,CAA9B;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AACA,QAAA,WAAW,EAAIO,WADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAII;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKO,YAAY,CAACC,MAAb,GAAsB,CAAtB,GACGD,YAAY,CAACE,GAAb,CAAiB,UAACC,OAAD,EAAUC,CAAV;AAAA,4BACjB;AAAG,UAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAW;AAAK,UAAA,GAAG,EAAEV,OAAO,CAACS,OAAO,CAACE,QAAT,CAAP,CAA0BC,MAApC;AAA4C,UAAA,GAAG,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX,EACCH,OAAO,CAACI,IADT,CADiB;AAAA,OAAjB,CADH,GAMC,IAPN,eASI,oBAAC,UAAD;AACA,QAAA,WAAW,EAAId,WADf;AAEA,QAAA,WAAW,EAAIE,WAFf;AAGA,QAAA,MAAM,EAAIP,IAAI,CAACG,EAHf;AAIA,QAAA,cAAc,EAAIK,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CAJJ,CADJ;AAwBH;;;;EA7CkBf,S;;AAgDvB,eAAeG,QAAf","sourcesContent":["import React,{ Component } from 'react';\nimport NewComment from './NewComment';\nimport Header from './Header';\n\n\nclass Comments extends Component {\n\n    getPost = (postid, posts) => {\n        let post;\n        posts.some((p) => {\n            if(p.id === postid){\n                post = p;\n                return true;\n            }\n            return false;\n        });\n        return post;\n    }\n\n\n    render(){\n        const {posts, currentUser, getUser, allComments, updateComments, getComments} = this.props;\n        let postid = this.props.match.params.postid;\n\n        let post = this.getPost(postid, posts);\n        let commentArray = getComments(postid);\n        return (\n            <div className=\"main\">\n                <Header\n                currentUser = {currentUser}\n                />\n                <div className=\"comments\">\n                    {commentArray.length > 0 ?\n                        commentArray.map((comment, i) =>\n                        <p key={i}><img src={getUser(comment.authorid).avatar} alt='avatar'></img>\n                        {comment.text}\n                        </p>\n                        )\n                    : null\n                    }\n                    <NewComment\n                    currentUser = {currentUser}\n                    allComments = {allComments}\n                    postid = {post.id}\n                    updateComments = {updateComments}\n                    />\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}